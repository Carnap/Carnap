name: Automatically build Carnap and Carnap-GHCJS
on: [push, pull_request]
jobs:
  # conditionally sets the matrix based on which repo this is, avoiding needing
  # the self hosted runner on forks
  # h/t https://stackoverflow.com/a/65434401/2350164 and
  # https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#example-returning-a-json-object
  matrix-prep:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - id: set-matrix
      run: |
        if [[ $GITHUB_REPOSITORY = 'Carnap/Carnap' ]]; then
          echo '::set-output name=matrix::["self-hosted", "macos-latest"]'
          echo '::set-output name=docker_matrix::["self-hosted"]'
        else
          echo '::set-output name=matrix::["macos-latest"]'
          echo '::set-output name=docker_matrix::[]'
        fi

  build:
    needs: matrix-prep
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ${{ fromJSON(needs.matrix-prep.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v2
      - uses: cachix/install-nix-action@v12
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v8
        with:
          name: carnap
          # skip pushing to cachix if this is NOT a push to a branch (i.e. it is a PR)
          skipPush: ${{ github.event_name != 'push' }}
          signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
      # run it in serial because we are getting attacked by the OOM killer lol
      - run: nix-build -A client
      - run: nix-build -A server

  docker-build:
    needs: matrix-prep
    # only build deployable images on master branch
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ${{ fromJSON(needs.matrix-prep.outputs.docker_matrix) }}
    env:
      IMG_REF: "docker.pkg.github.com/${GITHUB_REPOSITORY}/carnap:latest"
      # GitHub Actions has a broken default for this
      XDG_RUNTIME_DIR: "${HOME}/run"
    steps:
      - run: 'mkdir -p "${XDG_RUNTIME_DIR}"'
      - run: "echo url: docker://$(echo ${IMG_REF} | envsubst | tr 'A-Z' 'a-z')"
      - uses: actions/checkout@v2
      - uses: cachix/install-nix-action@v12
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - run: nix-shell -p skopeo --run "skopeo login docker.pkg.github.com -u ${{ github.repository_owner }} -p ${{ secrets.GITHUB_TOKEN }}"
      - uses: cachix/cachix-action@v8
        with:
          name: carnap
          # the docker image artifacts are really big and not terribly useful for deployment
          skipPush: true
          signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
      - run: nix-build -A client
      - run: nix-shell -p skopeo --run "skopeo copy docker-archive:$(nix-build release.nix --arg hasKvm false -A docker --no-out-link) docker://$(echo ${IMG_REF} | envsubst | tr 'A-Z' 'a-z')"
