name: Automatically build Carnap and Carnap-GHCJS
on: [push, pull_request]
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # TODO: reinstate Ubuntu once we figure out how to make it stop hitting
        # OOM. macOS seems to crash a lot less, if ever.
        os: [macos-latest]
    steps:
    - uses: actions/checkout@v2
    - uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixos-unstable
    - uses: cachix/cachix-action@v8
      with:
        name: carnap
        # skip pushing to cachix if this is NOT a push to a branch (i.e. it is a PR)
        skipPush: ${{ github.event_name != 'push' }}
        signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
    # run it in serial because we are getting attacked by the OOM killer lol
    - run: nix-build -A client
    - run: nix-build -A server

  docker-build:
    # only build deployable images on master branch
    # TODO: reinstate once Ubuntu stops OOM'ing the client build
    if: false && (github.event_name == 'push' && github.ref == 'refs/heads/master')
    runs-on: ubuntu-latest
    env:
      IMG_REF: "docker.pkg.github.com/${GITHUB_REPOSITORY}/carnap:latest"
      # GitHub Actions has a broken default for this
      XDG_RUNTIME_DIR: "${HOME}/run"
    steps:
    - run: 'mkdir -p "${XDG_RUNTIME_DIR}"'
    - run: "echo url: docker://$(echo ${IMG_REF} | envsubst | tr 'A-Z' 'a-z')"
    - uses: actions/checkout@v2
    - uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixos-unstable
    - run: nix-shell -p skopeo --run "skopeo login docker.pkg.github.com -u ${{ github.repository_owner }} -p ${{ secrets.GITHUB_TOKEN }}"
    - uses: cachix/cachix-action@v8
      with:
        name: carnap
        # the docker image artifacts are really big and not terribly useful for deployment
        skipPush: true
        signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
    - run: nix-build -A client
    - run: nix-shell -p skopeo --run "skopeo copy docker-archive:$(nix-build release.nix --arg hasKvm false -A docker --no-out-link) docker://$(echo ${IMG_REF} | envsubst | tr 'A-Z' 'a-z')"

