var initialize = new Event('initialize');
var gradedVisible = true

function tryDeleteProblem (e, json) {
    if (confirm("Are you sure you want to delete this problem? After deletion, the student will be able to resubmit.")) {
        deleteProblem(e, json);
    }
}

function deleteProblem (e, json) {
    jQuery.ajax({
        url: '@{ReviewR coursetitle filename}',
        type: 'DELETE',
        contentType: "application/json",
        data: json,
        success: function(data) { 
            window.alert(data); 
            $(e.target).parents().closest(".card").remove();
        },
        error: function(data) { window.alert("Error, couldn't delete the problem") },
        });
    };

$(".updateSubmission").submit(function(e) {
    jQuery.ajax({
        url: '@{ReviewR coursetitle filename}',
        type: 'PUT',
        data: new FormData(this),
        processData: false,
        contentType: false,
        success: function(data) {
            if (data.slice(0,5) == "error") window.alert(data.slice(6))
            else {
                window.alert("updated!")
                if (!gradedVisible) { $(e.target).parents().closest(".ungraded").addClass("hidden-graded") }
                $(e.target).parents().closest(".ungraded").find(".review-status").html("manually graded")
                $(e.target).parents().closest(".ungraded").removeClass("ungraded").addClass("graded")
                let score = $(e.target).parents().closest(".card-body").find("[name='f3']").val()
                $(e.target).parents().closest(".card-body").find(".points-awarded").html("points added: " + score)
                $(e.target).parents().closest(".card-body").find(".btn").prop("disabled",true)
                $(e.target).parents().closest(".card-body").find(".btn").removeClass("unsaved")
                initVisible()
            }},
        error: function(data) {
            window.alert("Error, couldn't update the assignment ")
            },
        });
    e.preventDefault();
});

$(".updateSubmission [name='f3']").on("input", e => {
            let submitbtn = $(e.target).parents().closest(".card-body").find(".btn")
            submitbtn.prop("disabled",false)
            submitbtn.addClass("unsaved")
 })

function initVisible () {
    let wintop = $(window).scrollTop()
    let winbottom = wintop + $(window).height()
    document.querySelectorAll("[data-carnap-type] .input").forEach( 
    function (el) { 
        let isAbove = $(el).offset().top < winbottom; 
        let isBelow = $(el).offset().top + $(el).outerHeight() > wintop;
        if (isBelow && isAbove && !el.initialized) { 
            el.dispatchEvent(initialize);
            el.initialized = true
        }
    })
};

$(window).scroll(_ => {
    clearTimeout(window.scrollTimeout);
    window.scrollTimeout = setTimeout(initVisible,500)
})

$("#viewUngraded").click( function(){
    $("#viewAll").removeClass("btn-primary")
    $("#viewAll").addClass("btn-outline-primary")
    $(this).removeClass("btn-outline-primary")
    $(this).addClass("btn-primary")
    $(".graded").addClass("hidden-graded")
    gradedVisible = false
    initVisible()
});

$("#viewAll").click( function(){
    $("#viewUngraded").removeClass("btn-primary")
    $("#viewUngraded").addClass("btn-outline-primary")
    $(this).removeClass("btn-outline-primary")
    $(this).addClass("btn-primary")
    $(".graded").removeClass("hidden-graded")
    gradedVisible = true
    initVisible()
});

$("#selectStudent").change(function(){
    var uid = $(this).val();
    if (uid == "all") {
        $('[data-submission-uid]').removeClass("hidden-student")
    } else {
        $('[data-submission-uid]').addClass("hidden-student")
        $('[data-submission-uid="' + uid + '"]').removeClass("hidden-student")
    };
});

$(window).on("load", _ => { 
    window.scrollTimeout = setTimeout(initVisible,3000) 
    window.addEventListener("beforeunload", function (e) {
        if ($(".unsaved").length == 0) return undefined;
        var confirmationMessage = "Warning - there may be unsaved changes to scores. Continue?";
        (e || window.event).returnValue = confirmationMessage; //Gecko + IE
        return confirmationMessage; //Gecko + Webkit, Safari, Chrome etc.
    })
});
