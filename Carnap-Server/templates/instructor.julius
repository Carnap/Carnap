$(document).ready(function(){
    $(document.getElementById(location.hash.substring(1) + "-tab"))[0].click();
});

$("a[data-toggle='tab']").click(function(){
    url = this.href
    window.location.hash = url.substring(url.indexOf('#'))
})

$("textarea").addClass("form-control")

function submitAddInstructor(elt,cid) {
    var form = elt.form
    $(form).children("input[name=f1]").val(cid);
    form.submit()
    }

function tryDeleteAssignment (json,fn,ct) {
    if (confirm("Are you sure you want to delete the assignment " + fn + ", and all submitted problems from this assignment?")) {
        deleteAssignment(json,fn,ct);
        }
    }

function tryDeleteDocument (json) {
    var fn = JSON.parse(json).contents;
    if (confirm("Are you sure you want to permanently delete the document" + fn + "?")) {
        deleteDocument(json,fn);
        }
    }

function tryDeleteCoInstructor (json, ln, fn) {
    if (confirm("Are you sure you want to remove Co-Instructor " + fn + " " + ln + "? This will permanently delete all assignments for this course created by this co-instructor, and all student work submitted for those assignments")) {
        deleteCoInstructor(json, ln, fn);
        }
    }

function tryDeleteCourse (json) {
    var cn = JSON.parse(json).contents;
    if (confirm("Are you sure you want to permanently delete the course " + cn 
        + "? This will unenroll all students, and delete all associated data, including assignments attached to the course.")) {
        deleteCourse(json,cn);
        }
    }

function tryDropStudent (json) {
    var cn = JSON.parse(json).contents;
    if (confirm("Are you sure you want to drop this student?")) {
        dropStudent(json,cn);
        }
    }

function modalEditAssignment (id,due,visfrom,vistill,desc) {
    jQuery.noConflict()
    $("#updateAssignment input[name=f1]").val(id);
    var dparts = due.split(" ")
    var fparts = visfrom.split(" ")
    var tparts = vistill.split(" ")
    if (dparts.length > 1) {
        $("#updateAssignment input[name=f2]").val(dparts[0]);
        $("#updateAssignment input[name=f3]").val(dparts[1]);
        };
    if (fparts.length > 1) {
        $("#updateAssignment input[name=f4]").val(fparts[0]);
        $("#updateAssignment input[name=f5]").val(fparts[1]);
        };
    if (tparts.length > 1) {
        $("#updateAssignment input[name=f6]").val(tparts[0]);
        $("#updateAssignment input[name=f7]").val(tparts[1]);
        };
    $("#updateAssignment textarea[name=f8]").val(desc);
    $("#updateAssignmentData").modal({show:true});
}

function modalEditDocument (id,desc,tags) {
    jQuery.noConflict()
    $("#updateDocument input[name=f1]").val(id);
    $("#updateDocument textarea[name=f3]").val(desc)
    $("#updateDocument input[name=f5]").tagsinput("removeAll");
    $("#updateDocument input[name=f5]").tagsinput("add",tags);
    $("#updateDocumentData").modal({show:true});
}

function modalEditCourse (id,desc,start,end,points) {
    jQuery.noConflict()
    var sparts = start.split(" ")
    var eparts = start.split(" ")
    $("#updateCourse input[name=f1]").val(id);
    $("#updateCourse textarea[name=f2]").val(desc);
    if (sparts.length > 0) {$("#updateCourse input[name=f3]").val(sparts[0]);}
    if (eparts.length > 0) {$("#updateCourse input[name=f4]").val(eparts[0]);}
    $("#updateCourse input[name=f5]").val(points);
    $("#updateCourseData").modal({show:true});
}

function deleteCoInstructor (json,ln,fn) {
    jQuery.ajax({
        url: '@{InstructorR ident}',
        type: 'DELETE',
        contentType: "application/json",
        data: json,
        success: function(data) {
            var el = $("#Co-Instructor-" + $.escapeSelector(ln) + "-" + $.escapeSelector(fn));
            el.remove();
            window.alert("Removed Co-Instructor " + fn + " " + ln);
            },
        error: function(data) {
            window.alert("Error, couldn't remove co-instructor " + fn + " " + ln)
            },
        });
    };

function deleteAssignment (json,fn,ct) {
    jQuery.ajax({
        url: '@{InstructorR ident}',
        type: 'DELETE',
        contentType: "application/json",
        data: json,
        success: function(data) {
            var el = $("#assignment-" + $.escapeSelector(ct) + "-" + $.escapeSelector(fn));
            el.remove();
            window.alert("Deleted the assignment " + fn);
            },
        error: function(data) {
            window.alert("Error, couldn't delete the assignment " + fn)
            },
        });
    };

function deleteDocument (json,fn) {
    jQuery.ajax({
        url: '@{InstructorR ident}',
        type: 'DELETE',
        contentType: "application/json",
        data: json,
        success: function(data) {
            var el = $("#document-" + $.escapeSelector(fn));
            el.remove();
            window.alert("Deleted the assignment " + fn);
            },
        error: function(data) {
            window.alert("Error, couldn't delete the assignment " + fn)
            },
        });
    };

function dropStudent (json,sident) {
    jQuery.ajax({
        url: '@{InstructorR ident}',
        type: 'DELETE',
        contentType: "application/json",
        data: json,
        success: function(data) {
            var el = $("#student-" + $.escapeSelector(sident));
            el.remove();
            },
        error: function(data) {
            window.alert("Error, couldn't drop the student " + sident)
            },
        });
    };

function deleteCourse (json,cn) {
    var tag = cn.replace(/ /g,'_')
    jQuery.ajax({
        url: '@{InstructorR ident}',
        type: 'DELETE',
        contentType: "application/json",
        data: json,
        success: function(data) {
            var el1 = $("#nav-to-course-" + $.escapeSelector(tag));
            var el2 = $("#course-" + $.escapeSelector(tag));
            el1.remove();
            el2.remove();
            window.alert("Deleted the course " + cn);
            },
        error: function(data) {
            window.alert("Error, couldn't delete the course " + cn)
            },
        });
    };


function deleteProblemSet (json) {
    var cnts = JSON.parse(json).contents;
    var pn = cnts[1]
    var course = cnts[0]
    jQuery.ajax({
        url: '@{InstructorR ident}',
        type: 'DELETE',
        contentType: "application/json",
        data: json,
        success: function(data) {
            var el = $("#problem-set-" + $.escapeSelector(course) + "-" + pn.toString());
            el.remove();
            window.alert("Deleted problem set " + pn.toString());
            },
        error: function(data) {
            window.alert("Error, couldn't delete problem set " + pn.toString())
            },
        });
    };

$("#updateAssignment").submit(function(e) {
    jQuery.ajax({
        url: '@{InstructorR ident}',
        type: 'PUT',
        data: new FormData(this),
        processData: false,
        contentType: false,
        success: function(data) {
            $("#updateAssignmentData").modal('hide');
            location.reload()
            },
        error: function(data) {
            window.alert("Error, couldn't update the assignment ")
            },
        });
    e.preventDefault();
})

$("#updateCourse").submit(function(e) {
    jQuery.ajax({
        url: '@{InstructorR ident}',
        type: 'PUT',
        data: new FormData(this),
        processData: false,
        contentType: false,
        success: function(data) {
            $("#updateCourseData").modal('hide');
            location.reload() /* lazy. Fix eventually. */
            },
        error: function(data) {
            window.alert("Error, couldn't update the course")
            },
        });
    e.preventDefault();
})

$("#updateDocument").submit(function(e) {
    jQuery.ajax({
        url: '@{InstructorR ident}',
        type: 'PUT',
        data: new FormData(this),
        processData: false,
        contentType: false,
        success: function(data) {
            $("#updateDocumentData").modal('hide');
            location.reload()
            },
        error: function(data) {
            window.alert("Error, couldn't update the course")
            },
        });
    e.preventDefault();
})
