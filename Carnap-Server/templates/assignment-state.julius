var CarnapServerAPI = {}
CarnapServerAPI.submissionSource = #{source}
CarnapServerAPI.assignmentKey = #{show key}
CarnapServerAPI.user = {}
CarnapServerAPI.user.firstName = #{userDataFirstName userdata}
CarnapServerAPI.user.lastName = #{userDataLastName userdata}
CarnapServerAPI.initialized = false
CarnapServerAPI.state = {}

CarnapServerAPI.putAssignmentState = async function (ns, val) {
    CarnapServerAPI.state[ns] = val
    await new Promise((resolve,reject) => jQuery.ajax({
        url: '@{CourseAssignmentStateR coursetitle filename}',
        type: 'PUT',
        contentType: "application/json",
        data: JSON.stringify(CarnapServerAPI.state),
        success: function(data) { resolve(data) },
        error: function(data) {
            window.alert("Possible network error: couldn't save assignment state")
            reject("Possible network error: couldn't save assignment state")
        },
    }));
};

CarnapServerAPI.getAssignmentState = async function () {
    if (CarnapServerAPI.initialized) {
        return CarnapServerAPI.state
    } else {
        return await new Promise((resolve,reject) => jQuery.ajax({
            url: '@{CourseAssignmentStateR coursetitle filename}',
            type: 'GET',
            contentType: "application/json",
            success: function(data) { 
                console.log("received assignment state: " + JSON.stringify(data))
                CarnapServerAPI.initialized = true
                CarnapServerAPI.state = data 
                resolve(data)
            },
            error: function(data) {
                window.alert("Possible network error: couldn't retrieve assignment state")
                reject("Possible network error: couldn't retrieve assignment state")
            },
        }));
    }
};
