#Chapter 2: Official and Unofficial Notation

Recall, the basic rules for building up grammatical assertions in the simple
language we've been using so far.

1.  Every sentence letter in the list

    $P,Q,...,W, P_1, Q_1,..., W_1, P_2,...$

    is a grammatical assertion

2.  We may build a grammatical assertion:
     a.  by taking two grammatical assertions we already have, putting an
         $\land,\lor,\rightarrow$ or $\leftrightarrow$ between them, and
         wrapping the result in parentheses;
     b.  by taking one grammatical assertions we already have, and putting
         a $\neg$ in front of it.

We say that a sentence built up merely by following these rules is in official
notation. Such sentences are easy to parse, but sometimes tedious to write,
and difficult to read at a glance. So, we will allow three sorts of
abbreviations to our official sentences, in order to make them easier to read
and write.

The first type of abbreviation is easy to explain. When the first symbol of
a sentence is "$($", and the last is "$)$", we allow these to be removed. This
won't cause any confusion about the structure of the sentence, since if the
outer parentheses are missing, you can still parse the sentence "as if" they
were there.

The second type of abbreviation needs a little more explanation. An analogy
will be helpful. Think of PEMDAS. What PEMDAS really instructs you to do is to
combine the numerals in a formula in a certain way. So, for example, PEMDAS
tells you that in $2 + 2 \times 2$, you ought to combine the right pair of
$2$s, and then combine the result of that with the left pair of $2$s. You
can think of these instructions as telling you how to "group" the numerals. To
make this explicit , you can wrap the groups in parentheses; since you combine
the right pair of $2$s, you can wrap those, and since you combine that result
with the left-most $2$, you can wrap the whole thing. What you get is $(2 + (2
\times 2))$---which is the same, according to PEMDAS, as $2 + 2 \times 2$.

In logic, we're not dealing with addition and so on, so we don't use PEMDAS.
Instead, we use what you might think of as a "JI"-rule. "J" stands for
*junctions*---specifically, $\land$, the "and" symbol (sometimes known as
"conjunction"), and $\lor$, the "or" symbol (sometimes known as "disjunction").
"I" stands for *ifs*---specifically, $\rightarrow$, the "if-then" symbol, and
$\leftrightarrow$, the "if and only if" symbol. What the rule says is that
when there aren't enough parentheses, you group junctions together before you
group together your ifs, just like PEMDAS says that you group 
multiplications together before you group additions together.

So, for example:

1. $P\rightarrow Q\land R$ is the same as $P\rightarrow (Q\land R)$.
2. $S\land T\leftrightarrow R\lor Q$ is the same as $(S\land T)\leftrightarrow(R\lor Q)$.
3. $((S\land T)\lor R \rightarrow W\land S)\leftrightarrow T\lor W$ is the same
   as $(((S\land T)\lor R) \rightarrow (W\land S))\leftrightarrow (T\lor W)$

Note that in each of these cases, we're applying the JI-rule to formulas where
we've already applied the rule allowing us to drop outer parentheses.

Officially, let's give the rule the following definition.

The JI-Rule

:   The JI-Rule states that you may remove parentheses in the following ways:

    1. $((\ldots \land\ldots)\rightarrow\ldots \quad$ can be replaced with $\quad\ldots \land \ldots \rightarrow \ldots$ 
    2. $(\ldots\lor\ldots)\rightarrow\ldots \quad$ can be replaced with $\quad \ldots \lor \ldots \rightarrow \ldots$
    3. $(\ldots\land\ldots)\leftrightarrow\ldots \quad$ can be replaced with $\quad \ldots \land \ldots \leftrightarrow \ldots$
    4. $(\ldots\lor\ldots)\leftrightarrow\ldots \quad$ can be replaced with $\quad \ldots \lor \ldots \leftrightarrow \ldots$
    5. $\ldots \rightarrow (\ldots\land\ldots) \quad$ can be replaced with $\quad \ldots \rightarrow \ldots \land \ldots$
    6. $\ldots \rightarrow (\ldots\lor\ldots) \quad$ can be replaced with $\quad \ldots \rightarrow \ldots \lor \ldots$
    7. $\ldots \leftrightarrow (\ldots\land\ldots) \quad$ can be replaced with $\quad \ldots \leftrightarrow \ldots \land \ldots$
    8. $\ldots \leftrightarrow (\ldots\lor\ldots) \quad$ can be replaced with $\quad \ldots \leftrightarrow \ldots \lor \ldots$

    In other words, you may take a formula that has one of the shapes on the
    left, above, and remove parentheses to make it match the corresponding
    formula on the right

There's just one more rule to take care of. Again, it's helpful to think of
arithmetic. When we do arithmetic, we (usually) proceed from left to right. So,
for example, $10 - 10 - 10$ is equal to $-10 = ((10 - 10) - 10)$, not to $10
= (10 - (10 - 10))$.[^1] Call this way of doing subtraction a "lefty rule" for
subtraction. Operations are grouped "lefty" rather than "righty", meaning you
do the ones on the left first.

[^1]:: One has a similar "lefty rule" for division. $2 \div 2 \div 2$ is equal
to $1/2 = ((2 \div 2) \div 2)$, rather than $2 = (2 \div (2 \div 2))$.

In logic, we have a similar lefty-rule for each of our junctions: there's
a lefty-rule for $\land$ and a lefty-rule for $\lor$. So for example

1. $((P\rightarrow Q)\land R) \land S$ is the same as $(P\rightarrow Q)\land R\land S$.
2. $(W\lor R)\lor Q \rightarrow T$ is the same as $W\lor R\lor Q \rightarrow T$.

Note that in the second case, we are applying the lefty rule to a formula where
we've already applied the JI-rule.

Let's give an official statement of the lefty rules as follows.

Lefty-Rules

:   The *Lefty-Rule for $\lor$* states that you may remove parentheses in the following way:
 
     >   $(\ldots \lor \ldots)\lor \ldots \quad$ can be replaced with $\quad \ldots \lor \ldots \lor \ldots$
 
     The *Lefty-rule for $\land$* states that you may remove parentheses in the following way:
 
     >   $(\ldots \land \ldots)\land \ldots \quad$ can be replaced with $\quad \ldots \land \ldots \land \ldots$
 
     In other words, you may take a formula that has one of the shapes on the
     left, above, and remove parentheses to make it match the corresponding
     formula on the right[^2]

[^2]:: Note that the lefty-rule can be applied several times, so that long
strings of $\land$s or $\lor$s can be used without parentheses. For example,
changing $((P \lor Q) \lor R) \lor S$ into $(P\lor Q)\lor R \lor S$ and then
into $P\lor Q \lor R \lor S$ would be a legitimate use of the lefty-rule for
$\lor$.

These---the rule that lets us remove outer parentheses, the JI-rule, and the
lefty-rules for $\lor$ and $\land$---are our three basic types of
abbreviation. None of them introduces any ambiguity into our language. Since
formulas that are abbreviated using these rules go beyond what's allowed in
official notation, however, we give them a new name: formulas in unofficial
notation.

Unofficial notation
:   A formula is said to be in *unofficial notation* when it can be generated
    from a formula in official notation by removing one or more pairs of
    parentheses, using the JI rule, the lefty-rule for $\land$, the lefty-rule
    for $\lor$ or the operation of dropping an outer set of parentheses.

##Problem Set 2

As in the previous chapter, unpack the parsing trees for the following
sentences:

```{.SynChecker .MatchClean}
2.1  P /\ -Q
2.2  P /\ R -> T \/ W
2.3  ~P \/ ~(P -> Q \/ T)
2.4  Q \/ P \/ P -> S
2.5  P <-> (Q /\ S /\ P)
2.6  ~~Q -> Q
2.7  ~(~Q -> Q) 
2.8  (P -> Q) -> (R \/ P)
2.9  R -> (P -> ~Q \/ P \/ (Q /\ P))
2.10  (P<->Q) \/ (P/\ -Q) \/ (-P /\ Q)
```

#Translation

##Symbolization

We've now done everything we need to do to present the formal language that we
will be using for quite a while. In this section, we'll take a little bit of
time to think about how our formal language relates to natural language. For
practical reasons (since English is the only language we all speak) we will
focus on English-language arguments. But in principle, we could do the same
thing with other natural languages.

The general idea for applying our tools can be summed up in this way.

<figure>

![](/static/img/translations.svg)

</figure>

We will show how to translate between English and our artificial language:
both how to turn a sentence of our artificial language into English, and how
to go in the other direction with certain sentences of English. Our
translation technique will have the property that the translation of an
argument shares a logical form with the original argument. 

As a result, if we come up with two arguments---one formal, one English---that
are translations of one another, we can test the formal one for formal validity
(we don't know how to do this yet, but we will learn soon). If we find that the
formal argument is formally valid, then the English sentence must be formally
valid too (and so it is also deductively valid---the truth of its premises
ensures the truth of its conclusions).[^3]

[^3]:: If we find that the Formal Argument is invalid, can we infer that the
English argument is too? Often we can, but not in every case. There are
aspects of the logical form of English sentences that can't be captured in our
current---very simple--formal language; for example, arguments in English can
be valid because of the presence of words like "all" and "some". But we don't
yet have any way of representing the contribution that these words make to the
logical form of an argument.

##Symbols to English

In this section, we'll need to sometimes speak of arbitrary sentences in our
formal language, which might be simple---that is, they might be $P$ or $Q$---or
might be complex---that is, they might contain one or more connectives. When we 
need to do this, we'll use some Greek letters, like $\phi,\psi,\chi,\ldots$ to
stand for those arbitrary sentences.

To translate, it will often be useful to be able to go from our formal language
to English.  For example, we may wish to find out what a statement in English
implies. Then we might take that statement, translate it into our formal
language, work out a bunch of formal conclusions that follow from it, and
finally translate these formal conclusions back into English.

We'll start simple, by restricting ourselves to the connectives $\rightarrow$
and $\neg$.

Given a sentence $\phi$ in our formal language, the first step to translating
is to select an appropriate scheme of abbreviation:

Scheme of Abbreviation
:   A *scheme of abbreviation* for a sentence (or argument) is an assignment of
    a unique English meanings to the sentence letters occurring in the sentence (or
    argument).

We'll want our scheme of abbreviation to cover all of the sentence letters that
occur in $\phi$, or, if we are working with a whole argument, all the sentence
letters in the whole argument. *It's not OK to use two schemes of
abbreviation to translate different parts of the argument.* If you do this,
there's no guarantee that the English argument and formal argument you end up
with will have the same logical form.

For example, if we have an sentence $(P\lor Q)\rightarrow R$, we need
a scheme of abbreviation that covers $P,Q$ and $R$. So we might choose this
one:

| $P~=~$Deputy Dan Dances
| $Q~=~$Carl Cringes
| $R~=~$Ronny Runs

Once we have our scheme of abbreviation, we can translate into English by carrying out the following procedure.

<div class="algorithm">
Symbols to English

:   #.  If the sentence to be translated is in unofficial notation, then (if it
        makes things simpler for you) restore any parentheses that would be there if
        the sentence were in official notation.
    #.  Locate the main connective of the formal sentence.
    #.  If the main connective is $\rightarrow$, so that the sentence is
        $(\phi\rightarrow\psi)$, then write "If $\phi$, then $\psi$"
    #.  If the main connective is $\neg$, so that the sentence is $\neg\phi$, then
        write "It is not the case that $\phi$"
    #.  If either $\phi$ or $\psi$ contains any formal language connectives, then
        apply this procedure to $\phi$ and $\psi$ as well.
    #.  Once you have only sentence letters, replace each sentence letter with its
        English meaning according to the scheme of abbreviation.
</div>

Here are some examples of translations of formal sentences, using the scheme of
abbreviation above.

####Ex. 1
1. $(Q\rightarrow R)$
2. If $Q$, then $R$
3. If Carl Cringes, then Ronny Runs

####Ex. 2
#. $(Q\rightarrow\neg R)$
#. If $Q$, then $\neg R$
#. If $Q$, then it is not the case that $R$.
#. If Carl Cringes, then it is not the case that Ronny Runs

####Ex. 3
#. $(\neg Q\rightarrow R)$
#. If $\neg Q$, then $R$
#. If it is not the case that $Q$, then $R$
#. If it is not the case that Carl Cringes, then Ronny Runs

####Ex. 4
#. $\neg (Q\rightarrow R)$
#. It is not the case that $(Q\rightarrow R)$
#. It is not the case that if $Q$, then $R$
#. It is not the case that if Carl Cringes, then Ronny Runs

####Ex. 5
#. $(P\rightarrow (Q\rightarrow R))$
#. If $P$, then ($Q\rightarrow R)$
#. If $P$, then if $Q$, then $R$
#. If Deputy Dan Dances, then if Carl Cringes, then Ronny Runs

####Ex 6
#. $(P\rightarrow Q)\rightarrow R$
#. If $(P\rightarrow Q)$, then $R$
#. If If Deputy Dan Dances, then Carl Cringes, then Ronny Runs

This gives us a unique translation for each sentence, and one that has the
right logical properties. But although the resulting sentences are grammatical,
they're sometimes very difficult to understand, and extremely bad in terms of
style.[^4] So we may want to make them more readable. The following tricks are helpful.

[^4]::How can such an awkward sentence be grammatical? Well, the grammar of a
language and the readability and style of the sentences you make in accordance
with that grammar are two different things. For example, there's no limit on
how long a grammatical sentence of English can be. But beyond a certain point,
even grammatical sentences are impossible to understand. There are also fun
examples of grammatical sentences the repeat certain constructions in an
unexpected way. For example, consider the following sentence.

    <br>"The boy the girl the cat the rat bit scratched loved died."<br>

    Is it grammatical? Yes.<br>

    What does it mean? Think---start with the noun phrase "the cat the rat
    bit".


1.  The word "if" functions as a flag to mark off the left sentence in
    a conditional statement. But many other words and phrases perform the same
    function. So usually, the phrase "if $\phi$, then $\psi$" can be replaced by
    phrases like

    #. "provided that $\phi, \psi$"
    #. "given that $\phi, \psi$"
    #. "assuming that $\phi, \psi$"
    #. "on the condition that $\phi, \psi$"
    #. "in the case where $\phi, \psi$"

2.  The flag marking the left half of the sentence, in a conditional statement,
    is what is important in English---the ordering of the clauses does not
    generally matter very much. Hence when you have a phrase like 
        
    >   Provided that $\phi, \psi$

    You can typically use 

    >    $\psi$ provided that $\phi$

    instead.

3.  The world "only" reverses the meaning of a  flag phrase. It changes the
    flag from an indicator of what ought to be the left half of an "if
    ... then..." statement into an indicator of what ought to be the
    right half of an "if ... then ..." statement. So, "If $\phi$,
    then $\psi$" can be replaced by phrases like

    #. "$\phi$ only if $\psi$"
    #. "$\phi$ only provided that $\psi$"
    #. "$\phi$ only given that  $\psi$"
    #. "$\phi$ only assuming that  $\psi$"
    #. "$\phi$ only on the condition that $\psi$"
    #. "$\phi$ only in the case where $\psi$"

    You can see that this is correct if you compare the sentences

    a. You can drive only if you're older than eleven.
    b. If you can drive, then you're older than eleven.

    with the sentences 

    c. You can drive if you're older than eleven.
    d. If you're older than eleven, then you can drive.

    The first two sentences mean the same thing (something true). The second
    two sentences also mean the same thing as one another (something false).
    But what the second two sentences mean is different from what the first
    two sentences mean.

4.  When "it is not the case that" is in front of a sentence that has no
    internal logical structure---usually a sentence with just one
    verb-phrase---the negation can be "transferred to the verb" in various
    ways. For example

    #. "It is not the case that Deputy Dan Dances" can be cleaned up as 
    "Deputy Dan doesn't Dance".
    #. "It is not the case that translation is trivial" can be cleaned up as 
    "Translation is not trivial".
    #. "It is not the case that Ronny Runs" can be cleaned up as 
    "Ronny fails to Run".

We can clean up the awkward sentence "If If Deputy Dan Dances, then Carl Cringes, then Ronny Runs" in two steps.

#. If If Deputy Dan Dances, then Carl Cringes, then Ronny Runs.
#. If on the condition that Deputy Dan Dances, Carl Cringes, then Ronny Runs.
#. If Carl Cringes on the condition that Deputy Dan Dances, then Ronny Runs.

the resulting sentence is much easier to read.

We call the result of cleaning up a sentence a **stylistic variant** or
**stylistic variation** of the original sentence.

Stylistic Variant
:   A stylistic variant of a sentence is the result of "cleaning it up" to make
    it more readable while preserving its meaning

Cleaning up sentences can be a dangerous matter, though. This is because the
transformations we apply when we clean up sentences can sometimes introduce
ambiguity. 

Here's an example. Consider the sentence "It is not the case that if Ronny
Runs, then Carl Cringes", which we get from $\neg (R\rightarrow Q)$

1. It is not the case that if Ronny Runs, then Carl Cringes
2. Is not the case that on the condition that Ronny Runs, Carl Cringes
3. It is not the case that Carl Cringes on the condition that Ronny Runs

This may seem like a good translation. But now consider the sentence "If Ronny
Runs, it is not the case that Carl Cringes", which we get from $(R\rightarrow\neg Q)$.

#. If Ronny Runs, it is not the case that Carl Cringes
#. On the condition that Ronny Runs, it is not the case that Carl Cringes
#. It is not the case that Carl Cringes on the condition that Ronny Runs

Notice that we get exactly the same sentence. Thus, in our attempt at a more
elegant expression, we've lost some information. At least without looking at
context and other things, there's no way of recovering which sentence "It is
not the case that Carl Cringes on the condition that Ronny Runs" is a
translation of. By cleaning up the style, we've obscured the logical structure
of the sentence and introduced an ambiguity.

How we can transform sentences while preserving their meanings, and not
introducing ambiguities is a big and hard problem, and one still studied by
logicians, philosophers and linguists. Since we can't spend time reviewing all
that literature, you'll just need to use common sense and your understanding of
English to avoid introducing harmful ambiguities when you translate from
symbols to English.

##English to Symbols

Translations in the opposite direction---from English to Symbols---also require
a scheme of abbreviation. Such translations are judged for correctness
according to the following rule.

Criterion of Correctness for English to Symbols
:   
    A formal sentence $\phi$ *correctly translates* an English sentence
    (relative to some scheme of abbreviation) if and only if the original english
    sentence is a stylistic variant of the translation of $\phi$ into English
    according to that scheme of abbreviation.

For example:

1.  A correct translation of "If Carl Cringes on the condition that Deputy Dan
    Dances, then Ronny Runs", relative to the scheme of abbreviation that we
    used in the   previous section, is $(P\rightarrow Q)\rightarrow R$---because
    one good translation of $(P\rightarrow Q)\rightarrow R$ using this scheme is
    "If Carl Cringes on the condition that Deputy Dan Dances, then Ronny Runs".
#.  A correct translation of "It is not the case that if Carl Cringes, then
    Ronny Runs", relative to the scheme of abbreviation that we used in the
    previous section, is $\neg (Q\rightarrow R)$---because one good translation of
    $\neg (Q\rightarrow R)$ using this scheme is "It is not the case that if Carl
    Cringes, then Ronny Runs".
#.  The translation of "It is not the case that if Carl Cringes, then Ronny
    Runs", relative to the scheme of abbreviation that we used in the previous
    section, as $(\neg Q\rightarrow R)$ is not correct---because there is no way of
    translating $(\neg Q\rightarrow R)$ to mean "It is not the case that if Carl
    Cringes, then Ronny Runs".

Sometimes more than one translation from English to symbols will technically be
correct, according to our definition. This happens when a sentence is
ambiguous, as in the example at the end of the previous section. We must be
cautious in cases like these that we choose whichever of the available correct
translations is relevant to the argument as the speaker intends it (assuming
that they have a specific intention in mind---if they are talking without being
certain of what they mean to say, then we should take note of this fact and act
accordingly).

Because translating from English to Symbols sometimes requires telling which
sentence is a stylistic variant on which other sentence, it sometimes requires
a bit of intuition. But there's a good approximate algorithm to follow.

<div class="algorithm">
English To Symbols

:   #.  Replace all the stylistic variations on "if ..., then" and "it is not
        the case that" with their "if ..., then" and "it is not the case that"
        equivalents.
    #.  Replace the English main connective with the appropriate symbol. If you are
        replacing an "If... then", remember to wrap the two clauses you're
        replacing in
        parentheses, if they're not already wrapped. 
    #.  If there are any sentences remaining that do not occur in the scheme
        of abbreviation, repeat this procedure on those sentences.
    #.  If there are just sentences that occur in the scheme of abbreviation,
        replace them with the corresponding sentence letters.
</div>

Some tips:

#.  Once you've removed stylistic variation, if the first world is "If", the
    main connective is whatever "if ... then ..." pair that word is part of.
#.  Once you've removed stylistic variation, if the first phrase is "It is not
    the case that", then that is the main connective.
#.  Once you've removed stylistic variation "If" and ",then" behave a lot like
    parentheses: they're monogamous (they have only one partner), and not very
    discriminating (they pair with the nearest available unpaired partner).

Here's how the sentences of the previous section look if we translate in the other direction:

####Ex. 
#. If Carl Cringes, then Ronny Runs
#. (Carl Cringes $\rightarrow$ Ronny Runs)
#. $Q\rightarrow R$

####Ex. 2
#. If Carl Cringes, then it is not the case that Ronny Runs
#. (Carl Cringes $\rightarrow$ it is not the case that Ronny Runs)
#. (Carl Cringes $\rightarrow \neg$Ronny Runs)
#. $(Q\rightarrow \neg R)$

####Ex. 3
#. If it is not the case that Carl Cringes, then Ronny Runs
#. (it is not the case that Carl Cringes $\rightarrow$ Ronny Runs)
#. ($\neg$Carl Cringes $\rightarrow$ Ronny Runs)
#. $(\neg Q \rightarrow R)$

####Ex. 4
#. It is not the case that if Carl Cringes, then Ronny Runs
#. $\neg$ if Carl Cringes, then Ronny Runs
#. $\neg$(Carl Cringes $\rightarrow$ Ronny Runs)

####Ex. 5
#. If Deputy Dan Dances, then if Carl Cringes, then Ronny Runs
#. (Deputy Dan Dances $\rightarrow$ if Carl Cringes, then Ronny Runs)
#. (Deputy Dan Dances $\rightarrow$ (Carl Cringes $\rightarrow$ Ronny Runs))
#. $(P\rightarrow ( Q \rightarrow R))$

####Ex. 6
#. If If Deputy Dan Dances, then Carl Cringes, then Ronny Runs
#. (If Deputy Dan Dances, then Carl Cringes $\rightarrow$ Ronny Runs)
#. ((Deputy Dan Dances $\rightarrow$ Carl Cringes)$\rightarrow$ Ronny Runs)
#. $((P\rightarrow Q)\rightarrow R)$

#Problem Set 3

Please use the following scheme of abbreviation to translate the attached
English sentences into our formal language.

| $P~=~$People want to know what's going on
| $Q~=~$Questions will be raised
| $R~=~$Randy's wrangling a deal
| $S~=~$Somebody is going to get rich

Press return to check your translation. If the sentence to be translated turns
<span style="background:#b9f2b7">green</span>, this means you've succeeded!
Once you've got a green sentence, press submit to submit and save your answer.

Remember, the keyboard shorthand for our logical symbols is as follows:

 Connective           Keyboard Shorthand 
------------         --------------------
  $\land$            /\\
  $\lor$             \\/
  $\rightarrow$      -> 
  $\leftrightarrow$  <->
  $\neg$             ~

```{.Translate .Prop}
3.1 P : People want to know what's going on.
3.2 P->Q : If people want to know what's going on, then questions will be raised.
3.3 Q->P : Questions will be raised only if people want to know what's going on.
3.4 (P -> Q) -> ~R : Given that questions will be raised if people want to know what's going on, Randy's not wrangling a deal.
3.5 R -> (~Q ->S ) : If Randy's wrangling a deal, then provided that questions won't be raised, somebody is going to get rich.
3.6 S -> R : Somebody is going to get rich only provided that Randy's wrangling a deal.
3.7  R -> ~Q : Assuming that Randy's wrangling a deal, questions won't be raised.
3.8 S -> (~R -> P) : In the case where somebody is going to get rich, if Randy's not wrangling a deal, then people want to know what's going on.
3.9 ~Q -> S : Questions won't be raised only on the condition that somebody is going to get rich.
3.10 ~(R->S) : It's not the case that if Randy's wrangling a deal, then somebody is going to get rich 
```
